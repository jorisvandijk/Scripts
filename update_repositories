#!/bin/bash
#
# Usage: Automate pushing files to Git repositories
#
# Script by Joris van Dijk | gitlab.com/jorisvandijk 
#
#          Published under GPL-3.0-or-later

changes(){
#dir="$1" #current dir
dir="$HOME/Projects/"

# No directory has been provided, use current
if [ -z "$dir" ]
then
    dir="`pwd`"
fi

# Make sure directory ends with "/"
if [[ $dir != */ ]]
then
	dir="$dir/*"
else
	dir="$dir*"
fi

# Loop all sub-directories
for f in $dir
do
	# Only interested in directories
	[ -d "${f}" ] || continue

	echo -en "\033[0;35m"
	echo "${f}"
	echo -en "\033[0m"

	# Check if directory is a git repository
	if [ -d "$f/.git" ]
	then
		mod=0
		cd $f

		# Check for modified files
		if [ $(git status | grep modified -c) -ne 0 ]
		then
			mod=1
			echo -en "\033[0;31m"
			echo "Modified files"
			echo -en "\033[0m"
		fi

		# Check for untracked files
		if [ $(git status | grep Untracked -c) -ne 0 ]
		then
			mod=1
			echo -en "\033[0;31m"
			echo "Untracked files"
			echo -en "\033[0m"
		fi
		
		# Check for unpushed changes
		if [ $(git status | grep 'Your branch is ahead' -c) -ne 0 ]
		then
				mod=1
				echo -en "\033[0;31m"
				echo "Unpushed commit"
				echo -en "\033[0m"
		fi

		# Check if everything is peachy keen
		if [ $mod -eq 0 ]
		then
			echo "Nothing to commit"
		fi

		cd ../
	else
		echo "Not a git repository"
	fi

	echo
done
}
choices(){
    echo -e "Please select a repository.\n"
    PS3="Enter a number: "

    select repo in $(ls -d */)
    do
        result=$repo
        break;
    done
}
updates(){
    REPO=$(echo $result | sed 's:/*$::')
    cd $HOME/Projects/$REPO
    git add .
    git status
    echo
    read -p "Enter commit message: " MESSAGE
    git commit -m"${MESSAGE}"
    git push -u origin master
}
changes
choices
updates
